#!/bin/bash

# Variable con el nombre del fichero con la lista de usuarios que han de crearse
fichero_usuarios=
# Flag para controlar si se ha utilizado la opción de crear usuarios
flag_usuarios=0
# ---
# Variable con el nombre del fichero con la lista de usuarios que se han de añadir al grupo
fichero_grupo=
# Flag para controlar si se ha utilizado la opción de añadir usuarios a un grupo
flag_grupo=0
# Variable con el nombre del grupo al que se van a añadir los usuarios
nombre_grupo=
# ---
# Variable con el nombre del fichero con la lista de usuarios que se han de eliminar
fichero_eliminar=
# Flag para controlar si se ha utilizado la opción de eliminar usuarios
flag_eliminar=0
# ---
# Expresión regular que permite controlar si un nombre de usuario/grupo es válido
expresion_regular_nombres='^[a-zA-Z0-9_.][a-zA-Z0-9_.-]{0,30}[a-zA-Z0-9_.$-]?$'
# Flag para controlar si no se ha ingresado ninguna opción
flag_sin_opt=1
# ---

#######################
# Función help
#######################
usage() { 
  echo "cof_usuario [-h] [-usuario fichero] [-grupos fichero nombre del grupo]"
}


#######################
# Crea el usuario que se le pase por parámetro.
# La contraseña será el mismo nombre del usuario
##### Parametros ######
# $1 -> Nombre del usuario a crear
#######################
crear_usuario() {
    usuario="$1"
    if ! [[ ${usuario} =~ $expresion_regular_nombres ]]; then
        echo "${usuario} no es un nombre de usuario válido."
        continue;
    fi
    id -u ${usuario} > /dev/null 2>&1
    if [ $? -eq 0 ]; then
        echo "El usuario ${usuario} ya existe."
        return;
    fi
    echo "Creando el usuario ${usuario}" #muestra el usuario, configurar luego lo q se muestre por pantalla
    contrasena_cifrada="$(openssl passwd -6 -salt ${usuario} "${usuario}")"

    useradd -m -p "${contrasena_cifrada}" "${usuario}" > /dev/null 2>&1
    chown root /home/${usuario}
    chmod 770 /home/${usuario}
    chage -M 90 ${usuario}
    chage -W 2 ${usuario}
    chage -I 4 ${usuario} 
}

#######################
# Crea los usuarios cuyos nombre están especificados en
# un fichero. Se configurará, además, la contraseña, la caducidad
# de la misma y los permisos del directorio home
##### Parametros ######
# $1 -> Nombre del fichero que contiene el nombre de los usuarios
#######################

add_usuarios() {
    nombre_fichero="$1"
    lista_usuarios="$(cat ${nombre_fichero})"
    for cada_usuario in $lista_usuarios; do
        crear_usuario "${cada_usuario}"
    done
}

#######################
# Elimina del sistema los usuarios especificados en un 
# fichero. Además, se eliminará su directorio home
# con todo lo que contenga
##### Parametros ######
# $1 -> Nombre del fichero que contiene el nombre de los usuarios
#######################

remove_usuarios() {
    nombre_fichero="$1"
    lista_usuarios="$(cat ${nombre_fichero})"
    for usuario in $lista_usuarios; do
        if [ "$usuario" == "root" ]; then
            echo "No se puede eliminar el usuario root"
            continue;
        fi
        userdel "${usuario}" > /dev/null 2>&1 
        if [ $? -ne 0 ]; then
            echo "El usuario ${usuario} no existe."
            continue;
        fi
        echo "/home/${usuario}"
        rm -r "/home/${usuario}"

    done
}

#añade a un grupo los usuarios a los que pertenece
#######################
# Añade los usuarios cuyos nombres se encuentran en un fichero al
# grupo especificado
##### Parametros ######
# $1 -> Nombre del fichero que contiene los nombres de usuario
# $2 -> Nombre del grupo al que se van a añadir los usuarios
#######################

add_grupos() {
  local leergrup="$1"
  local nombregrup="$2"
  local listagrupos="$(cat $leergrup)"
  groupadd $nombregrup > /dev/null 2>&1
  for cada_integrante in $listagrupos; do
    usermod -aG "$nombregrup" "$cada_integrante"
    if [ $? -eq 0 ]; then
        echo "Se ha añadido a ${cada_integrante} al grupo ${nombregrup}"
    else
        echo "No se ha podido añadir a ${cada_integrante} al grupo ${nombregrup}"
    fi
  done
}


uid_usuario=$(id -u)
if [ ${uid_usuario} -ne 0 ]; then
    echo "Necesitas elevación para ejecutar el script"
    exit 1;
fi

while [ -n "$1" ]; do
    case "$1" in
      -h )
        usage
        exit 1
      ;;
      -u ) 
        flag_sin_opt=0

        if [ ${flag_usuarios} -eq 0 ]; then # Es la primera vez que aparece la opción -u
            flag_usuarios=1 # Ahora estamos en modo "read" de -u. Lo siguiente no puede ser
            # otra opción
            echo "Se pone a uno jeje"
        elif [ ${flag_usuarios} -ge 1 ]; then
            echo "Solo puedes especificar la opcion '-u' una vez"
            exit 1;
        fi
        if [ ${flag_grupo} -eq 1 ] || [ ${flag_grupo} -eq 2 ]; then
            echo "Tienes que especificar un fichero y un nombre de grupo para la opción '-g'";
            exit 1;
        elif [ ${flag_eliminar} -eq 1 ]; then
            echo "Tienes que especificar un fichero para la opción '-r'";
            exit 1;
        fi
      ;;
      -g ) 
        flag_sin_opt=0

        if [ ${flag_usuarios} -eq 1 ]; then
            echo "Tienes que especificar un fichero para la opción '-u'"
            exit 1;
        elif [ $flag_eliminar -eq 1 ]; then
            echo "Tienes que especificar un fichero para la opción '-r'"
            exit 1;
        fi

        if [ ${flag_grupo} -eq 0 ]; then
            flag_grupo=1;
        elif [ ${flag_grupo} -ge 1 ]; then
            echo "Solo puedes especificar la opción '-g' una vez"
            exit 1;
        fi 
      ;;
      -r )

        flag_sin_opt=0

        if [ ${flag_eliminar} -eq 0 ]; then
            flag_eliminar=1;
        else
            echo "Solo puedes especificar la opción '-r' una vez";
            exit 1;
        fi
        if [ ${flag_usuarios} -eq 1 ]; then
            echo "Tienes que especificar un fichero para la opción '-u'";
        elif [ ${flag_grupo} -eq 1 ] || [ ${flag_grupo} -eq 2 ]; then 
            echo "Tienes que especificar un fichero y un nombre de grupo para la opción '-g'";
            exit 1;
        fi
      ;;
      * )
        if [ ${flag_usuarios} -eq 1 ]; then
            flag_usuarios=2;
            fichero_usuarios="$1";
        elif [ ${flag_grupo} -eq 1 ]; then
            flag_grupo=2
            fichero_grupo="$1";
        elif [ ${flag_grupo} -eq 2 ]; then
            flag_grupo=3
            nombre_grupo="$1"
        elif [ ${flag_eliminar} -eq 1 ]; then
            flag_eliminar=2
            fichero_eliminar="$1"
        else 
            echo "No se reconoce la opción '$1'}"
            exit 1
        fi
    esac
  shift
done



if [ $flag_sin_opt -ne 0 ]; then
    echo "No se ha especificado ninguna opción"
    echo "Utiliza cof_usuario -h Para más ayuda"
    exit 1;
fi

if [ -n "$fichero_usuarios" ]; then 
    add_usuarios $fichero_usuarios
fi

if [ -n "$fichero_grupo" ]; then 
    add_grupos $fichero_grupo $nombre_grupo
fi

if [ -n "$fichero_eliminar" ]; then
    remove_usuarios $fichero_eliminar  
fi
#!/bin/bash

# Variable con el nombre del fichero con la lista de usuarios que han de crearse
fichero_usuarios=
# Flag para controlar si se ha utilizado la opción de crear usuarios
flag_usuarios=0
# ---
# Variable con el nombre del fichero con la lista de usuarios que se han de añadir al grupo
fichero_grupo=
# Flag para controlar si se ha utilizado la opción de añadir usuarios a un grupo
flag_grupo=0
# Variable con el nombre del grupo al que se van a añadir los usuarios
nombre_grupo=
# ---
# Variable con el nombre del fichero con la lista de usuarios que se han de eliminar
fichero_eliminar=
# Flag para controlar si se ha utilizado la opción de eliminar usuarios
flag_eliminar=0
# ---
# Expresión regular que permite controlar si un nombre de usuario/grupo es válido
expresion_regular_nombres='^[a-zA-Z0-9_.][a-zA-Z0-9_.-]{0,30}[a-zA-Z0-9_.$-]?$'
# Flag para controlar si no se ha ingresado ninguna opción
flag_sin_opt=1
# ---

#######################
# Función help
#######################
usage() { 
  echo "cof_usuario [-h] [-usuario fichero] [-grupos fichero nombre del grupo]"
}


#######################
# Crea el usuario que se le pase por parámetro.
# La contraseña será el mismo nombre del usuario
##### Parametros ######
# $1 -> Nombre del usuario a crear
#######################
crear_usuario() {
    usuario="$1"
    if ! [[ ${usuario} =~ $expresion_regular_nombres ]]; then
        echo "${usuario} no es un nombre de usuario válido."
        continue;
    fi
    id -u ${usuario} > /dev/null 2>&1
    if [ $? -eq 0 ]; then
        echo "El usuario ${usuario} ya existe."
        return;
    fi
    echo "Creando el usuario ${usuario}" #muestra el usuario, configurar luego lo q se muestre por pantalla
    contrasena_cifrada="$(openssl passwd -6 -salt ${usuario} "${usuario}")"

    useradd -m -p "${contrasena_cifrada}" "${usuario}" > /dev/null 2>&1
    chown root /home/${usuario}
    chmod 770 /home/${usuario}
    chage -M 90 ${usuario}
    chage -W 2 ${usuario}
    chage -I 4 ${usuario} 
}

#######################
# Crea los usuarios cuyos nombre están especificados en
# un fichero. Se configurará, además, la contraseña, la caducidad
# de la misma y los permisos del directorio home
##### Parametros ######
# $1 -> Nombre del fichero que contiene el nombre de los usuarios
#######################

add_usuarios() {
    nombre_fichero="$1"
    lista_usuarios="$(cat ${nombre_fichero})"
    for cada_usuario in $lista_usuarios; do
        crear_usuario "${cada_usuario}"
    done
}

#######################
# Elimina del sistema los usuarios especificados en un 
# fichero. Además, se eliminará su directorio home
# con todo lo que contenga
##### Parametros ######
# $1 -> Nombre del fichero que contiene el nombre de los usuarios
#######################

remove_usuarios() {
    nombre_fichero="$1"
    lista_usuarios="$(cat ${nombre_fichero})"
    for usuario in $lista_usuarios; do
        if [ "$usuario" == "root" ]; then
            echo "No se puede eliminar el usuario root"
            continue;
        fi
        userdel "${usuario}" > /dev/null 2>&1 
        if [ $? -ne 0 ]; then
            echo "El usuario ${usuario} no existe."
            continue;
        fi
        echo "/home/${usuario}"
        rm -r "/home/${usuario}"

    done
}

#añade a un grupo los usuarios a los que pertenece
#######################
# Añade los usuarios cuyos nombres se encuentran en un fichero al
# grupo especificado
##### Parametros ######
# $1 -> Nombre del fichero que contiene los nombres de usuario
# $2 -> Nombre del grupo al que se van a añadir los usuarios
#######################

add_grupos() {
  local leergrup="$1"
  local nombregrup="$2"
  local listagrupos="$(cat $leergrup)"
  groupadd $nombregrup > /dev/null 2>&1
  for cada_integrante in $listagrupos; do
    usermod -aG "$nombregrup" "$cada_integrante"
    if [ $? -eq 0 ]; then
        echo "Se ha añadido a ${cada_integrante} al grupo ${nombregrup}"
    else
        echo "No se ha podido añadir a ${cada_integrante} al grupo ${nombregrup}"
    fi
  done
}


uid_usuario=$(id -u)
if [ ${uid_usuario} -ne 0 ]; then
    echo "Necesitas elevación para ejecutar el script"
    exit 1;
fi

while [ -n "$1" ]; do
    case "$1" in
      -h )
        usage
        exit 1
      ;;
      -u ) 
        flag_sin_opt=0

        if [ ${flag_usuarios} -eq 0 ]; then # Es la primera vez que aparece la opción -u
            flag_usuarios=1 # Ahora estamos en modo "read" de -u. Lo siguiente no puede ser
            # otra opción
            echo "Se pone a uno jeje"
        elif [ ${flag_usuarios} -ge 1 ]; then
            echo "Solo puedes especificar la opcion '-u' una vez"
            exit 1;
        fi
        if [ ${flag_grupo} -eq 1 ] || [ ${flag_grupo} -eq 2 ]; then
            echo "Tienes que especificar un fichero y un nombre de grupo para la opción '-g'";
            exit 1;
        elif [ ${flag_eliminar} -eq 1 ]; then
            echo "Tienes que especificar un fichero para la opción '-r'";
            exit 1;
        fi
      ;;
      -g ) 
        flag_sin_opt=0

        if [ ${flag_usuarios} -eq 1 ]; then
            echo "Tienes que especificar un fichero para la opción '-u'"
            exit 1;
        elif [ $flag_eliminar -eq 1 ]; then
            echo "Tienes que especificar un fichero para la opción '-r'"
            exit 1;
        fi

        if [ ${flag_grupo} -eq 0 ]; then
            flag_grupo=1;
        elif [ ${flag_grupo} -ge 1 ]; then
            echo "Solo puedes especificar la opción '-g' una vez"
            exit 1;
        fi 
      ;;
      -r )

        flag_sin_opt=0

        if [ ${flag_eliminar} -eq 0 ]; then
            flag_eliminar=1;
        else
            echo "Solo puedes especificar la opción '-r' una vez";
            exit 1;
        fi
        if [ ${flag_usuarios} -eq 1 ]; then
            echo "Tienes que especificar un fichero para la opción '-u'";
        elif [ ${flag_grupo} -eq 1 ] || [ ${flag_grupo} -eq 2 ]; then 
            echo "Tienes que especificar un fichero y un nombre de grupo para la opción '-g'";
            exit 1;
        fi
      ;;
      * )
        if [ ${flag_usuarios} -eq 1 ]; then
            flag_usuarios=2;
            fichero_usuarios="$1";
        elif [ ${flag_grupo} -eq 1 ]; then
            flag_grupo=2
            fichero_grupo="$1";
        elif [ ${flag_grupo} -eq 2 ]; then
            flag_grupo=3
            nombre_grupo="$1"
        elif [ ${flag_eliminar} -eq 1 ]; then
            flag_eliminar=2
            fichero_eliminar="$1"
        else 
            echo "No se reconoce la opción '$1'}"
            exit 1
        fi
    esac
  shift
done



if [ $flag_sin_opt -ne 0 ]; then
    echo "No se ha especificado ninguna opción"
    echo "Utiliza cof_usuario -h Para más ayuda"
    exit 1;
fi

if [ -n "$fichero_usuarios" ]; then 
    add_usuarios $fichero_usuarios
fi

if [ -n "$fichero_grupo" ]; then 
    add_grupos $fichero_grupo $nombre_grupo
fi

if [ -n "$fichero_eliminar" ]; then
    remove_usuarios $fichero_eliminar  
fi
#!/bin/bash

# Variable con el nombre del fichero con la lista de usuarios que han de crearse
fichero_usuarios=
# Flag para controlar si se ha utilizado la opción de crear usuarios
flag_usuarios=0
# ---
# Variable con el nombre del fichero con la lista de usuarios que se han de añadir al grupo
fichero_grupo=
# Flag para controlar si se ha utilizado la opción de añadir usuarios a un grupo
flag_grupo=0
# Variable con el nombre del grupo al que se van a añadir los usuarios
nombre_grupo=
# ---
# Variable con el nombre del fichero con la lista de usuarios que se han de eliminar
fichero_eliminar=
# Flag para controlar si se ha utilizado la opción de eliminar usuarios
flag_eliminar=0
# ---
# Expresión regular que permite controlar si un nombre de usuario/grupo es válido
expresion_regular_nombres='^[a-zA-Z0-9_.][a-zA-Z0-9_.-]{0,30}[a-zA-Z0-9_.$-]?$'
# Flag para controlar si no se ha ingresado ninguna opción
flag_sin_opt=1
# ---

#######################
# Función help
#######################
usage() { 
  echo "cof_usuario [-h] [-usuario fichero] [-grupos fichero nombre del grupo]"
}


#######################
# Crea el usuario que se le pase por parámetro.
# La contraseña será el mismo nombre del usuario
##### Parametros ######
# $1 -> Nombre del usuario a crear
#######################
crear_usuario() {
    usuario="$1"
    if ! [[ ${usuario} =~ $expresion_regular_nombres ]]; then
        echo "${usuario} no es un nombre de usuario válido."
        continue;
    fi
    id -u ${usuario} > /dev/null 2>&1
    if [ $? -eq 0 ]; then
        echo "El usuario ${usuario} ya existe."
        return;
    fi
    echo "Creando el usuario ${usuario}" #muestra el usuario, configurar luego lo q se muestre por pantalla
    contrasena_cifrada="$(openssl passwd -6 -salt ${usuario} "${usuario}")"

    useradd -m -p "${contrasena_cifrada}" "${usuario}" > /dev/null 2>&1
    chown root /home/${usuario}
    chmod 770 /home/${usuario}
    chage -M 90 ${usuario}
    chage -W 2 ${usuario}
    chage -I 4 ${usuario} 
}

#######################
# Crea los usuarios cuyos nombre están especificados en
# un fichero. Se configurará, además, la contraseña, la caducidad
# de la misma y los permisos del directorio home
##### Parametros ######
# $1 -> Nombre del fichero que contiene el nombre de los usuarios
#######################

add_usuarios() {
    nombre_fichero="$1"
    lista_usuarios="$(cat ${nombre_fichero})"
    for cada_usuario in $lista_usuarios; do
        crear_usuario "${cada_usuario}"
    done
}

#######################
# Elimina del sistema los usuarios especificados en un 
# fichero. Además, se eliminará su directorio home
# con todo lo que contenga
##### Parametros ######
# $1 -> Nombre del fichero que contiene el nombre de los usuarios
#######################

remove_usuarios() {
    nombre_fichero="$1"
    lista_usuarios="$(cat ${nombre_fichero})"
    for usuario in $lista_usuarios; do
        if [ "$usuario" == "root" ]; then
            echo "No se puede eliminar el usuario root"
            continue;
        fi
        userdel "${usuario}" > /dev/null 2>&1 
        if [ $? -ne 0 ]; then
            echo "El usuario ${usuario} no existe."
            continue;
        fi
        echo "/home/${usuario}"
        rm -r "/home/${usuario}"

    done
}

#añade a un grupo los usuarios a los que pertenece
#######################
# Añade los usuarios cuyos nombres se encuentran en un fichero al
# grupo especificado
##### Parametros ######
# $1 -> Nombre del fichero que contiene los nombres de usuario
# $2 -> Nombre del grupo al que se van a añadir los usuarios
#######################

add_grupos() {
  local leergrup="$1"
  local nombregrup="$2"
  local listagrupos="$(cat $leergrup)"
  groupadd $nombregrup > /dev/null 2>&1
  for cada_integrante in $listagrupos; do
    usermod -aG "$nombregrup" "$cada_integrante"
    if [ $? -eq 0 ]; then
        echo "Se ha añadido a ${cada_integrante} al grupo ${nombregrup}"
    else
        echo "No se ha podido añadir a ${cada_integrante} al grupo ${nombregrup}"
    fi
  done
}


uid_usuario=$(id -u)
if [ ${uid_usuario} -ne 0 ]; then
    echo "Necesitas elevación para ejecutar el script"
    exit 1;
fi

while [ -n "$1" ]; do
    case "$1" in
      -h )
        usage
        exit 1
      ;;
      -u ) 
        flag_sin_opt=0

        if [ ${flag_usuarios} -eq 0 ]; then # Es la primera vez que aparece la opción -u
            flag_usuarios=1 # Ahora estamos en modo "read" de -u. Lo siguiente no puede ser
            # otra opción
            echo "Se pone a uno jeje"
        elif [ ${flag_usuarios} -ge 1 ]; then
            echo "Solo puedes especificar la opcion '-u' una vez"
            exit 1;
        fi
        if [ ${flag_grupo} -eq 1 ] || [ ${flag_grupo} -eq 2 ]; then
            echo "Tienes que especificar un fichero y un nombre de grupo para la opción '-g'";
            exit 1;
        elif [ ${flag_eliminar} -eq 1 ]; then
            echo "Tienes que especificar un fichero para la opción '-r'";
            exit 1;
        fi
      ;;
      -g ) 
        flag_sin_opt=0

        if [ ${flag_usuarios} -eq 1 ]; then
            echo "Tienes que especificar un fichero para la opción '-u'"
            exit 1;
        elif [ $flag_eliminar -eq 1 ]; then
            echo "Tienes que especificar un fichero para la opción '-r'"
            exit 1;
        fi

        if [ ${flag_grupo} -eq 0 ]; then
            flag_grupo=1;
        elif [ ${flag_grupo} -ge 1 ]; then
            echo "Solo puedes especificar la opción '-g' una vez"
            exit 1;
        fi 
      ;;
      -r )

        flag_sin_opt=0

        if [ ${flag_eliminar} -eq 0 ]; then
            flag_eliminar=1;
        else
            echo "Solo puedes especificar la opción '-r' una vez";
            exit 1;
        fi
        if [ ${flag_usuarios} -eq 1 ]; then
            echo "Tienes que especificar un fichero para la opción '-u'";
        elif [ ${flag_grupo} -eq 1 ] || [ ${flag_grupo} -eq 2 ]; then 
            echo "Tienes que especificar un fichero y un nombre de grupo para la opción '-g'";
            exit 1;
        fi
      ;;
      * )
        if [ ${flag_usuarios} -eq 1 ]; then
            flag_usuarios=2;
            fichero_usuarios="$1";
        elif [ ${flag_grupo} -eq 1 ]; then
            flag_grupo=2
            fichero_grupo="$1";
        elif [ ${flag_grupo} -eq 2 ]; then
            flag_grupo=3
            nombre_grupo="$1"
        elif [ ${flag_eliminar} -eq 1 ]; then
            flag_eliminar=2
            fichero_eliminar="$1"
        else 
            echo "No se reconoce la opción '$1'}"
            exit 1
        fi
    esac
  shift
done



if [ $flag_sin_opt -ne 0 ]; then
    echo "No se ha especificado ninguna opción"
    echo "Utiliza cof_usuario -h Para más ayuda"
    exit 1;
fi

if [ -n "$fichero_usuarios" ]; then 
    add_usuarios $fichero_usuarios
fi

if [ -n "$fichero_grupo" ]; then 
    add_grupos $fichero_grupo $nombre_grupo
fi

if [ -n "$fichero_eliminar" ]; then
    remove_usuarios $fichero_eliminar  
fi
#!/bin/bash

# Variable con el nombre del fichero con la lista de usuarios que han de crearse
fichero_usuarios=
# Flag para controlar si se ha utilizado la opción de crear usuarios
flag_usuarios=0
# ---
# Variable con el nombre del fichero con la lista de usuarios que se han de añadir al grupo
fichero_grupo=
# Flag para controlar si se ha utilizado la opción de añadir usuarios a un grupo
flag_grupo=0
# Variable con el nombre del grupo al que se van a añadir los usuarios
nombre_grupo=
# ---
# Variable con el nombre del fichero con la lista de usuarios que se han de eliminar
fichero_eliminar=
# Flag para controlar si se ha utilizado la opción de eliminar usuarios
flag_eliminar=0
# ---
# Expresión regular que permite controlar si un nombre de usuario/grupo es válido
expresion_regular_nombres='^[a-zA-Z0-9_.][a-zA-Z0-9_.-]{0,30}[a-zA-Z0-9_.$-]?$'
# Flag para controlar si no se ha ingresado ninguna opción
flag_sin_opt=1
# ---

#######################
# Función help
#######################
usage() { 
  echo "cof_usuario [-h] [-usuario fichero] [-grupos fichero nombre del grupo]"
}


#######################
# Crea el usuario que se le pase por parámetro.
# La contraseña será el mismo nombre del usuario
##### Parametros ######
# $1 -> Nombre del usuario a crear
#######################
crear_usuario() {
    usuario="$1"
    if ! [[ ${usuario} =~ $expresion_regular_nombres ]]; then
        echo "${usuario} no es un nombre de usuario válido."
        continue;
    fi
    id -u ${usuario} > /dev/null 2>&1
    if [ $? -eq 0 ]; then
        echo "El usuario ${usuario} ya existe."
        return;
    fi
    echo "Creando el usuario ${usuario}" #muestra el usuario, configurar luego lo q se muestre por pantalla
    contrasena_cifrada="$(openssl passwd -6 -salt ${usuario} "${usuario}")"

    useradd -m -p "${contrasena_cifrada}" "${usuario}" > /dev/null 2>&1
    chown root /home/${usuario}
    chmod 770 /home/${usuario}
    chage -M 90 ${usuario}
    chage -W 2 ${usuario}
    chage -I 4 ${usuario} 
}

#######################
# Crea los usuarios cuyos nombre están especificados en
# un fichero. Se configurará, además, la contraseña, la caducidad
# de la misma y los permisos del directorio home
##### Parametros ######
# $1 -> Nombre del fichero que contiene el nombre de los usuarios
#######################

add_usuarios() {
    nombre_fichero="$1"
    lista_usuarios="$(cat ${nombre_fichero})"
    for cada_usuario in $lista_usuarios; do
        crear_usuario "${cada_usuario}"
    done
}

#######################
# Elimina del sistema los usuarios especificados en un 
# fichero. Además, se eliminará su directorio home
# con todo lo que contenga
##### Parametros ######
# $1 -> Nombre del fichero que contiene el nombre de los usuarios
#######################

remove_usuarios() {
    nombre_fichero="$1"
    lista_usuarios="$(cat ${nombre_fichero})"
    for usuario in $lista_usuarios; do
        if [ "$usuario" == "root" ]; then
            echo "No se puede eliminar el usuario root"
            continue;
        fi
        userdel "${usuario}" > /dev/null 2>&1 
        if [ $? -ne 0 ]; then
            echo "El usuario ${usuario} no existe."
            continue;
        fi
        echo "/home/${usuario}"
        rm -r "/home/${usuario}"

    done
}

#añade a un grupo los usuarios a los que pertenece
#######################
# Añade los usuarios cuyos nombres se encuentran en un fichero al
# grupo especificado
##### Parametros ######
# $1 -> Nombre del fichero que contiene los nombres de usuario
# $2 -> Nombre del grupo al que se van a añadir los usuarios
#######################

add_grupos() {
  local leergrup="$1"
  local nombregrup="$2"
  local listagrupos="$(cat $leergrup)"
  groupadd $nombregrup > /dev/null 2>&1
  for cada_integrante in $listagrupos; do
    usermod -aG "$nombregrup" "$cada_integrante"
    if [ $? -eq 0 ]; then
        echo "Se ha añadido a ${cada_integrante} al grupo ${nombregrup}"
    else
        echo "No se ha podido añadir a ${cada_integrante} al grupo ${nombregrup}"
    fi
  done
}


uid_usuario=$(id -u)
if [ ${uid_usuario} -ne 0 ]; then
    echo "Necesitas elevación para ejecutar el script"
    exit 1;
fi

while [ -n "$1" ]; do
    case "$1" in
      -h )
        usage
        exit 1
      ;;
      -u ) 
        flag_sin_opt=0

        if [ ${flag_usuarios} -eq 0 ]; then # Es la primera vez que aparece la opción -u
            flag_usuarios=1 # Ahora estamos en modo "read" de -u. Lo siguiente no puede ser
            # otra opción
            echo "Se pone a uno jeje"
        elif [ ${flag_usuarios} -ge 1 ]; then
            echo "Solo puedes especificar la opcion '-u' una vez"
            exit 1;
        fi
        if [ ${flag_grupo} -eq 1 ] || [ ${flag_grupo} -eq 2 ]; then
            echo "Tienes que especificar un fichero y un nombre de grupo para la opción '-g'";
            exit 1;
        elif [ ${flag_eliminar} -eq 1 ]; then
            echo "Tienes que especificar un fichero para la opción '-r'";
            exit 1;
        fi
      ;;
      -g ) 
        flag_sin_opt=0

        if [ ${flag_usuarios} -eq 1 ]; then
            echo "Tienes que especificar un fichero para la opción '-u'"
            exit 1;
        elif [ $flag_eliminar -eq 1 ]; then
            echo "Tienes que especificar un fichero para la opción '-r'"
            exit 1;
        fi

        if [ ${flag_grupo} -eq 0 ]; then
            flag_grupo=1;
        elif [ ${flag_grupo} -ge 1 ]; then
            echo "Solo puedes especificar la opción '-g' una vez"
            exit 1;
        fi 
      ;;
      -r )

        flag_sin_opt=0

        if [ ${flag_eliminar} -eq 0 ]; then
            flag_eliminar=1;
        else
            echo "Solo puedes especificar la opción '-r' una vez";
            exit 1;
        fi
        if [ ${flag_usuarios} -eq 1 ]; then
            echo "Tienes que especificar un fichero para la opción '-u'";
        elif [ ${flag_grupo} -eq 1 ] || [ ${flag_grupo} -eq 2 ]; then 
            echo "Tienes que especificar un fichero y un nombre de grupo para la opción '-g'";
            exit 1;
        fi
      ;;
      * )
        if [ ${flag_usuarios} -eq 1 ]; then
            flag_usuarios=2;
            fichero_usuarios="$1";
        elif [ ${flag_grupo} -eq 1 ]; then
            flag_grupo=2
            fichero_grupo="$1";
        elif [ ${flag_grupo} -eq 2 ]; then
            flag_grupo=3
            nombre_grupo="$1"
        elif [ ${flag_eliminar} -eq 1 ]; then
            flag_eliminar=2
            fichero_eliminar="$1"
        else 
            echo "No se reconoce la opción '$1'}"
            exit 1
        fi
    esac
  shift
done



if [ $flag_sin_opt -ne 0 ]; then
    echo "No se ha especificado ninguna opción"
    echo "Utiliza cof_usuario -h Para más ayuda"
    exit 1;
fi

if [ -n "$fichero_usuarios" ]; then 
    add_usuarios $fichero_usuarios
fi

if [ -n "$fichero_grupo" ]; then 
    add_grupos $fichero_grupo $nombre_grupo
fi

if [ -n "$fichero_eliminar" ]; then
    remove_usuarios $fichero_eliminar  
fi
#!/bin/bash

# Variable con el nombre del fichero con la lista de usuarios que han de crearse
fichero_usuarios=
# Flag para controlar si se ha utilizado la opción de crear usuarios
flag_usuarios=0
# ---
# Variable con el nombre del fichero con la lista de usuarios que se han de añadir al grupo
fichero_grupo=
# Flag para controlar si se ha utilizado la opción de añadir usuarios a un grupo
flag_grupo=0
# Variable con el nombre del grupo al que se van a añadir los usuarios
nombre_grupo=
# ---
# Variable con el nombre del fichero con la lista de usuarios que se han de eliminar
fichero_eliminar=
# Flag para controlar si se ha utilizado la opción de eliminar usuarios
flag_eliminar=0
# ---
# Expresión regular que permite controlar si un nombre de usuario/grupo es válido
expresion_regular_nombres='^[a-zA-Z0-9_.][a-zA-Z0-9_.-]{0,30}[a-zA-Z0-9_.$-]?$'
# Flag para controlar si no se ha ingresado ninguna opción
flag_sin_opt=1
# ---

#######################
# Función help
#######################
usage() { 
  echo "cof_usuario [-h] [-usuario fichero] [-grupos fichero nombre del grupo]"
}


#######################
# Crea el usuario que se le pase por parámetro.
# La contraseña será el mismo nombre del usuario
##### Parametros ######
# $1 -> Nombre del usuario a crear
#######################
crear_usuario() {
    usuario="$1"
    if ! [[ ${usuario} =~ $expresion_regular_nombres ]]; then
        echo "${usuario} no es un nombre de usuario válido."
        continue;
    fi
    id -u ${usuario} > /dev/null 2>&1
    if [ $? -eq 0 ]; then
        echo "El usuario ${usuario} ya existe."
        return;
    fi
    echo "Creando el usuario ${usuario}" #muestra el usuario, configurar luego lo q se muestre por pantalla
    contrasena_cifrada="$(openssl passwd -6 -salt ${usuario} "${usuario}")"

    useradd -m -p "${contrasena_cifrada}" "${usuario}" > /dev/null 2>&1
    chown root /home/${usuario}
    chmod 770 /home/${usuario}
    chage -M 90 ${usuario}
    chage -W 2 ${usuario}
    chage -I 4 ${usuario} 
}

#######################
# Crea los usuarios cuyos nombre están especificados en
# un fichero. Se configurará, además, la contraseña, la caducidad
# de la misma y los permisos del directorio home
##### Parametros ######
# $1 -> Nombre del fichero que contiene el nombre de los usuarios
#######################

add_usuarios() {
    nombre_fichero="$1"
    lista_usuarios="$(cat ${nombre_fichero})"
    for cada_usuario in $lista_usuarios; do
        crear_usuario "${cada_usuario}"
    done
}

#######################
# Elimina del sistema los usuarios especificados en un 
# fichero. Además, se eliminará su directorio home
# con todo lo que contenga
##### Parametros ######
# $1 -> Nombre del fichero que contiene el nombre de los usuarios
#######################

remove_usuarios() {
    nombre_fichero="$1"
    lista_usuarios="$(cat ${nombre_fichero})"
    for usuario in $lista_usuarios; do
        if [ "$usuario" == "root" ]; then
            echo "No se puede eliminar el usuario root"
            continue;
        fi
        userdel "${usuario}" > /dev/null 2>&1 
        if [ $? -ne 0 ]; then
            echo "El usuario ${usuario} no existe."
            continue;
        fi
        echo "/home/${usuario}"
        rm -r "/home/${usuario}"

    done
}

#añade a un grupo los usuarios a los que pertenece
#######################
# Añade los usuarios cuyos nombres se encuentran en un fichero al
# grupo especificado
##### Parametros ######
# $1 -> Nombre del fichero que contiene los nombres de usuario
# $2 -> Nombre del grupo al que se van a añadir los usuarios
#######################

add_grupos() {
  local leergrup="$1"
  local nombregrup="$2"
  local listagrupos="$(cat $leergrup)"
  groupadd $nombregrup > /dev/null 2>&1
  for cada_integrante in $listagrupos; do
    usermod -aG "$nombregrup" "$cada_integrante"
    if [ $? -eq 0 ]; then
        echo "Se ha añadido a ${cada_integrante} al grupo ${nombregrup}"
    else
        echo "No se ha podido añadir a ${cada_integrante} al grupo ${nombregrup}"
    fi
  done
}


uid_usuario=$(id -u)
if [ ${uid_usuario} -ne 0 ]; then
    echo "Necesitas elevación para ejecutar el script"
    exit 1;
fi

while [ -n "$1" ]; do
    case "$1" in
      -h )
        usage
        exit 1
      ;;
      -u ) 
        flag_sin_opt=0

        if [ ${flag_usuarios} -eq 0 ]; then # Es la primera vez que aparece la opción -u
            flag_usuarios=1 # Ahora estamos en modo "read" de -u. Lo siguiente no puede ser
            # otra opción
            echo "Se pone a uno jeje"
        elif [ ${flag_usuarios} -ge 1 ]; then
            echo "Solo puedes especificar la opcion '-u' una vez"
            exit 1;
        fi
        if [ ${flag_grupo} -eq 1 ] || [ ${flag_grupo} -eq 2 ]; then
            echo "Tienes que especificar un fichero y un nombre de grupo para la opción '-g'";
            exit 1;
        elif [ ${flag_eliminar} -eq 1 ]; then
            echo "Tienes que especificar un fichero para la opción '-r'";
            exit 1;
        fi
      ;;
      -g ) 
        flag_sin_opt=0

        if [ ${flag_usuarios} -eq 1 ]; then
            echo "Tienes que especificar un fichero para la opción '-u'"
            exit 1;
        elif [ $flag_eliminar -eq 1 ]; then
            echo "Tienes que especificar un fichero para la opción '-r'"
            exit 1;
        fi

        if [ ${flag_grupo} -eq 0 ]; then
            flag_grupo=1;
        elif [ ${flag_grupo} -ge 1 ]; then
            echo "Solo puedes especificar la opción '-g' una vez"
            exit 1;
        fi 
      ;;
      -r )

        flag_sin_opt=0

        if [ ${flag_eliminar} -eq 0 ]; then
            flag_eliminar=1;
        else
            echo "Solo puedes especificar la opción '-r' una vez";
            exit 1;
        fi
        if [ ${flag_usuarios} -eq 1 ]; then
            echo "Tienes que especificar un fichero para la opción '-u'";
        elif [ ${flag_grupo} -eq 1 ] || [ ${flag_grupo} -eq 2 ]; then 
            echo "Tienes que especificar un fichero y un nombre de grupo para la opción '-g'";
            exit 1;
        fi
      ;;
      * )
        if [ ${flag_usuarios} -eq 1 ]; then
            flag_usuarios=2;
            fichero_usuarios="$1";
        elif [ ${flag_grupo} -eq 1 ]; then
            flag_grupo=2
            fichero_grupo="$1";
        elif [ ${flag_grupo} -eq 2 ]; then
            flag_grupo=3
            nombre_grupo="$1"
        elif [ ${flag_eliminar} -eq 1 ]; then
            flag_eliminar=2
            fichero_eliminar="$1"
        else 
            echo "No se reconoce la opción '$1'}"
            exit 1
        fi
    esac
  shift
done



if [ $flag_sin_opt -ne 0 ]; then
    echo "No se ha especificado ninguna opción"
    echo "Utiliza cof_usuario -h Para más ayuda"
    exit 1;
fi

if [ -n "$fichero_usuarios" ]; then 
    add_usuarios $fichero_usuarios
fi

if [ -n "$fichero_grupo" ]; then 
    add_grupos $fichero_grupo $nombre_grupo
fi

if [ -n "$fichero_eliminar" ]; then
    remove_usuarios $fichero_eliminar  
fi
#!/bin/bash

# Variable con el nombre del fichero con la lista de usuarios que han de crearse
fichero_usuarios=
# Flag para controlar si se ha utilizado la opción de crear usuarios
flag_usuarios=0
# ---
# Variable con el nombre del fichero con la lista de usuarios que se han de añadir al grupo
fichero_grupo=
# Flag para controlar si se ha utilizado la opción de añadir usuarios a un grupo
flag_grupo=0
# Variable con el nombre del grupo al que se van a añadir los usuarios
nombre_grupo=
# ---
# Variable con el nombre del fichero con la lista de usuarios que se han de eliminar
fichero_eliminar=
# Flag para controlar si se ha utilizado la opción de eliminar usuarios
flag_eliminar=0
# ---
# Expresión regular que permite controlar si un nombre de usuario/grupo es válido
expresion_regular_nombres='^[a-zA-Z0-9_.][a-zA-Z0-9_.-]{0,30}[a-zA-Z0-9_.$-]?$'
# Flag para controlar si no se ha ingresado ninguna opción
flag_sin_opt=1
# ---

#######################
# Función help
#######################
usage() { 
  echo "cof_usuario [-h] [-usuario fichero] [-grupos fichero nombre del grupo]"
}


#######################
# Crea el usuario que se le pase por parámetro.
# La contraseña será el mismo nombre del usuario
##### Parametros ######
# $1 -> Nombre del usuario a crear
#######################
crear_usuario() {
    usuario="$1"
    if ! [[ ${usuario} =~ $expresion_regular_nombres ]]; then
        echo "${usuario} no es un nombre de usuario válido."
        continue;
    fi
    id -u ${usuario} > /dev/null 2>&1
    if [ $? -eq 0 ]; then
        echo "El usuario ${usuario} ya existe."
        return;
    fi
    echo "Creando el usuario ${usuario}" #muestra el usuario, configurar luego lo q se muestre por pantalla
    contrasena_cifrada="$(openssl passwd -6 -salt ${usuario} "${usuario}")"

    useradd -m -p "${contrasena_cifrada}" "${usuario}" > /dev/null 2>&1
    chown root /home/${usuario}
    chmod 770 /home/${usuario}
    chage -M 90 ${usuario}
    chage -W 2 ${usuario}
    chage -I 4 ${usuario} 
}

#######################
# Crea los usuarios cuyos nombre están especificados en
# un fichero. Se configurará, además, la contraseña, la caducidad
# de la misma y los permisos del directorio home
##### Parametros ######
# $1 -> Nombre del fichero que contiene el nombre de los usuarios
#######################

add_usuarios() {
    nombre_fichero="$1"
    lista_usuarios="$(cat ${nombre_fichero})"
    for cada_usuario in $lista_usuarios; do
        crear_usuario "${cada_usuario}"
    done
}

#######################
# Elimina del sistema los usuarios especificados en un 
# fichero. Además, se eliminará su directorio home
# con todo lo que contenga
##### Parametros ######
# $1 -> Nombre del fichero que contiene el nombre de los usuarios
#######################

remove_usuarios() {
    nombre_fichero="$1"
    lista_usuarios="$(cat ${nombre_fichero})"
    for usuario in $lista_usuarios; do
        if [ "$usuario" == "root" ]; then
            echo "No se puede eliminar el usuario root"
            continue;
        fi
        userdel "${usuario}" > /dev/null 2>&1 
        if [ $? -ne 0 ]; then
            echo "El usuario ${usuario} no existe."
            continue;
        fi
        echo "/home/${usuario}"
        rm -r "/home/${usuario}"

    done
}

#añade a un grupo los usuarios a los que pertenece
#######################
# Añade los usuarios cuyos nombres se encuentran en un fichero al
# grupo especificado
##### Parametros ######
# $1 -> Nombre del fichero que contiene los nombres de usuario
# $2 -> Nombre del grupo al que se van a añadir los usuarios
#######################

add_grupos() {
  local leergrup="$1"
  local nombregrup="$2"
  local listagrupos="$(cat $leergrup)"
  groupadd $nombregrup > /dev/null 2>&1
  for cada_integrante in $listagrupos; do
    usermod -aG "$nombregrup" "$cada_integrante"
    if [ $? -eq 0 ]; then
        echo "Se ha añadido a ${cada_integrante} al grupo ${nombregrup}"
    else
        echo "No se ha podido añadir a ${cada_integrante} al grupo ${nombregrup}"
    fi
  done
}


uid_usuario=$(id -u)
if [ ${uid_usuario} -ne 0 ]; then
    echo "Necesitas elevación para ejecutar el script"
    exit 1;
fi

while [ -n "$1" ]; do
    case "$1" in
      -h )
        usage
        exit 1
      ;;
      -u ) 
        flag_sin_opt=0

        if [ ${flag_usuarios} -eq 0 ]; then # Es la primera vez que aparece la opción -u
            flag_usuarios=1 # Ahora estamos en modo "read" de -u. Lo siguiente no puede ser
            # otra opción
            echo "Se pone a uno jeje"
        elif [ ${flag_usuarios} -ge 1 ]; then
            echo "Solo puedes especificar la opcion '-u' una vez"
            exit 1;
        fi
        if [ ${flag_grupo} -eq 1 ] || [ ${flag_grupo} -eq 2 ]; then
            echo "Tienes que especificar un fichero y un nombre de grupo para la opción '-g'";
            exit 1;
        elif [ ${flag_eliminar} -eq 1 ]; then
            echo "Tienes que especificar un fichero para la opción '-r'";
            exit 1;
        fi
      ;;
      -g ) 
        flag_sin_opt=0

        if [ ${flag_usuarios} -eq 1 ]; then
            echo "Tienes que especificar un fichero para la opción '-u'"
            exit 1;
        elif [ $flag_eliminar -eq 1 ]; then
            echo "Tienes que especificar un fichero para la opción '-r'"
            exit 1;
        fi

        if [ ${flag_grupo} -eq 0 ]; then
            flag_grupo=1;
        elif [ ${flag_grupo} -ge 1 ]; then
            echo "Solo puedes especificar la opción '-g' una vez"
            exit 1;
        fi 
      ;;
      -r )

        flag_sin_opt=0

        if [ ${flag_eliminar} -eq 0 ]; then
            flag_eliminar=1;
        else
            echo "Solo puedes especificar la opción '-r' una vez";
            exit 1;
        fi
        if [ ${flag_usuarios} -eq 1 ]; then
            echo "Tienes que especificar un fichero para la opción '-u'";
        elif [ ${flag_grupo} -eq 1 ] || [ ${flag_grupo} -eq 2 ]; then 
            echo "Tienes que especificar un fichero y un nombre de grupo para la opción '-g'";
            exit 1;
        fi
      ;;
      * )
        if [ ${flag_usuarios} -eq 1 ]; then
            flag_usuarios=2;
            fichero_usuarios="$1";
        elif [ ${flag_grupo} -eq 1 ]; then
            flag_grupo=2
            fichero_grupo="$1";
        elif [ ${flag_grupo} -eq 2 ]; then
            flag_grupo=3
            nombre_grupo="$1"
        elif [ ${flag_eliminar} -eq 1 ]; then
            flag_eliminar=2
            fichero_eliminar="$1"
        else 
            echo "No se reconoce la opción '$1'}"
            exit 1
        fi
    esac
  shift
done



if [ $flag_sin_opt -ne 0 ]; then
    echo "No se ha especificado ninguna opción"
    echo "Utiliza cof_usuario -h Para más ayuda"
    exit 1;
fi

if [ -n "$fichero_usuarios" ]; then 
    add_usuarios $fichero_usuarios
fi

if [ -n "$fichero_grupo" ]; then 
    add_grupos $fichero_grupo $nombre_grupo
fi

if [ -n "$fichero_eliminar" ]; then
    remove_usuarios $fichero_eliminar  
fi
#!/bin/bash

# Variable con el nombre del fichero con la lista de usuarios que han de crearse
fichero_usuarios=
# Flag para controlar si se ha utilizado la opción de crear usuarios
flag_usuarios=0
# ---
# Variable con el nombre del fichero con la lista de usuarios que se han de añadir al grupo
fichero_grupo=
# Flag para controlar si se ha utilizado la opción de añadir usuarios a un grupo
flag_grupo=0
# Variable con el nombre del grupo al que se van a añadir los usuarios
nombre_grupo=
# ---
# Variable con el nombre del fichero con la lista de usuarios que se han de eliminar
fichero_eliminar=
# Flag para controlar si se ha utilizado la opción de eliminar usuarios
flag_eliminar=0
# ---
# Expresión regular que permite controlar si un nombre de usuario/grupo es válido
expresion_regular_nombres='^[a-zA-Z0-9_.][a-zA-Z0-9_.-]{0,30}[a-zA-Z0-9_.$-]?$'
# Flag para controlar si no se ha ingresado ninguna opción
flag_sin_opt=1
# ---

#######################
# Función help
#######################
usage() { 
  echo "cof_usuario [-h] [-usuario fichero] [-grupos fichero nombre del grupo]"
}


#######################
# Crea el usuario que se le pase por parámetro.
# La contraseña será el mismo nombre del usuario
##### Parametros ######
# $1 -> Nombre del usuario a crear
#######################
crear_usuario() {
    usuario="$1"
    if ! [[ ${usuario} =~ $expresion_regular_nombres ]]; then
        echo "${usuario} no es un nombre de usuario válido."
        continue;
    fi
    id -u ${usuario} > /dev/null 2>&1
    if [ $? -eq 0 ]; then
        echo "El usuario ${usuario} ya existe."
        return;
    fi
    echo "Creando el usuario ${usuario}" #muestra el usuario, configurar luego lo q se muestre por pantalla
    contrasena_cifrada="$(openssl passwd -6 -salt ${usuario} "${usuario}")"

    useradd -m -p "${contrasena_cifrada}" "${usuario}" > /dev/null 2>&1
    chown root /home/${usuario}
    chmod 770 /home/${usuario}
    chage -M 90 ${usuario}
    chage -W 2 ${usuario}
    chage -I 4 ${usuario} 
}

#######################
# Crea los usuarios cuyos nombre están especificados en
# un fichero. Se configurará, además, la contraseña, la caducidad
# de la misma y los permisos del directorio home
##### Parametros ######
# $1 -> Nombre del fichero que contiene el nombre de los usuarios
#######################

add_usuarios() {
    nombre_fichero="$1"
    lista_usuarios="$(cat ${nombre_fichero})"
    for cada_usuario in $lista_usuarios; do
        crear_usuario "${cada_usuario}"
    done
}

#######################
# Elimina del sistema los usuarios especificados en un 
# fichero. Además, se eliminará su directorio home
# con todo lo que contenga
##### Parametros ######
# $1 -> Nombre del fichero que contiene el nombre de los usuarios
#######################

remove_usuarios() {
    nombre_fichero="$1"
    lista_usuarios="$(cat ${nombre_fichero})"
    for usuario in $lista_usuarios; do
        if [ "$usuario" == "root" ]; then
            echo "No se puede eliminar el usuario root"
            continue;
        fi
        userdel "${usuario}" > /dev/null 2>&1 
        if [ $? -ne 0 ]; then
            echo "El usuario ${usuario} no existe."
            continue;
        fi
        echo "/home/${usuario}"
        rm -r "/home/${usuario}"

    done
}

#añade a un grupo los usuarios a los que pertenece
#######################
# Añade los usuarios cuyos nombres se encuentran en un fichero al
# grupo especificado
##### Parametros ######
# $1 -> Nombre del fichero que contiene los nombres de usuario
# $2 -> Nombre del grupo al que se van a añadir los usuarios
#######################

add_grupos() {
  local leergrup="$1"
  local nombregrup="$2"
  local listagrupos="$(cat $leergrup)"
  groupadd $nombregrup > /dev/null 2>&1
  for cada_integrante in $listagrupos; do
    usermod -aG "$nombregrup" "$cada_integrante"
    if [ $? -eq 0 ]; then
        echo "Se ha añadido a ${cada_integrante} al grupo ${nombregrup}"
    else
        echo "No se ha podido añadir a ${cada_integrante} al grupo ${nombregrup}"
    fi
  done
}


uid_usuario=$(id -u)
if [ ${uid_usuario} -ne 0 ]; then
    echo "Necesitas elevación para ejecutar el script"
    exit 1;
fi

while [ -n "$1" ]; do
    case "$1" in
      -h )
        usage
        exit 1
      ;;
      -u ) 
        flag_sin_opt=0

        if [ ${flag_usuarios} -eq 0 ]; then # Es la primera vez que aparece la opción -u
            flag_usuarios=1 # Ahora estamos en modo "read" de -u. Lo siguiente no puede ser
            # otra opción
            echo "Se pone a uno jeje"
        elif [ ${flag_usuarios} -ge 1 ]; then
            echo "Solo puedes especificar la opcion '-u' una vez"
            exit 1;
        fi
        if [ ${flag_grupo} -eq 1 ] || [ ${flag_grupo} -eq 2 ]; then
            echo "Tienes que especificar un fichero y un nombre de grupo para la opción '-g'";
            exit 1;
        elif [ ${flag_eliminar} -eq 1 ]; then
            echo "Tienes que especificar un fichero para la opción '-r'";
            exit 1;
        fi
      ;;
      -g ) 
        flag_sin_opt=0

        if [ ${flag_usuarios} -eq 1 ]; then
            echo "Tienes que especificar un fichero para la opción '-u'"
            exit 1;
        elif [ $flag_eliminar -eq 1 ]; then
            echo "Tienes que especificar un fichero para la opción '-r'"
            exit 1;
        fi

        if [ ${flag_grupo} -eq 0 ]; then
            flag_grupo=1;
        elif [ ${flag_grupo} -ge 1 ]; then
            echo "Solo puedes especificar la opción '-g' una vez"
            exit 1;
        fi 
      ;;
      -r )

        flag_sin_opt=0

        if [ ${flag_eliminar} -eq 0 ]; then
            flag_eliminar=1;
        else
            echo "Solo puedes especificar la opción '-r' una vez";
            exit 1;
        fi
        if [ ${flag_usuarios} -eq 1 ]; then
            echo "Tienes que especificar un fichero para la opción '-u'";
        elif [ ${flag_grupo} -eq 1 ] || [ ${flag_grupo} -eq 2 ]; then 
            echo "Tienes que especificar un fichero y un nombre de grupo para la opción '-g'";
            exit 1;
        fi
      ;;
      * )
        if [ ${flag_usuarios} -eq 1 ]; then
            flag_usuarios=2;
            fichero_usuarios="$1";
        elif [ ${flag_grupo} -eq 1 ]; then
            flag_grupo=2
            fichero_grupo="$1";
        elif [ ${flag_grupo} -eq 2 ]; then
            flag_grupo=3
            nombre_grupo="$1"
        elif [ ${flag_eliminar} -eq 1 ]; then
            flag_eliminar=2
            fichero_eliminar="$1"
        else 
            echo "No se reconoce l